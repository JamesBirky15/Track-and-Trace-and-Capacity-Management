<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAj8SURBVHhe7dbNjV1FGEXRnjkhwCAhkQQD8oIgCIw5NjCH++QuWTZu9/t/t2qvJW2pIqjvPAEA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAH/zwHAAQcTj8f229
        f34DAIsbx//f54wAAFjc58ffCACAxb10/EdGAAAs5rXjPzICAGARxx7/kREAAJM79fiPDiPg+y0AYDLn
        Hv+REQAAk7n0+I+MAACYxLWO/8gIAICdu/bxHxkBALBTtzr+IyMAAHbm1sd/ZAQAwE7c6/iPjAAAeLB7
        H/+REQAAD/Ko4z86jIC3WwDAnTz6+I+MAAC4k70c/5ERAAA3trfjPzICAOBG9nr8R0YAAFzZ3o//yAgA
        gCuZ5fiPjAAAuNBsx3/0bssIAIAzzHr8R0YAAJxo9uM/MgIA4EirHP+REQAAr1jt+I+MAAB4warHf2QE
        AMBnVj/+IyMAAJ5Vjv/oj603WwCQVTv+f2/9uAUAWY4/AMQ4/gAQ4/gDQIzjDwAxjj8AxDj+ABDj+ANA
        jOMPADGOPwDEOP4AEOP4A0CM4w8AMY4/AMQ4/gAQ4/gDQIzjDwAxjj8AxDj+ABDj+ANAjOMPADGOPwDE
        OP4AEOP4A0CM4w8AMY4/AMQ4/gAQ4/gDQIzjDwAxjj8AxDj+ABDj+ANAjOMPADGOPwDEOP4AEOP4A0CM
        4w8AMY4/AMQ4/gAQ4/gDQIzjDwAxjj8AxDj+ABDj+ANAjOMPADGOPwDEOP4AEOP4A0CM4w8AMY4/AMQ4
        /gAQ4/gDQIzjDwAxjj8AxDj+ABDj+ANAjOMPADGOPwDEOP4AEOP4A0CM4w8AMY4/AMQ4/gAQ4/gDQIzj
        DwAxjj8AxDj+ABDj+ANAjOMPADGOPwDEOP4AEOP4A0CM4w8AMY4/AMQ4/gAQ4/gDQIzjDwAxjj8AxDj+
        ABDj+ANAjOMPADGOPwDEOP4AEOP4A0CM4w8AMY4/AMQ4/gAQ4/gDQIzjDwAxjj8AxDj+ABDj+ANAjOMP
        ADGOPwDEOP4AEOP4A0CM4w8AMY4/AMQ4/gAQ4/gDQIzjDwAxjj8AxDj+ABDj+ANAjOMPADGOPwDEOP4A
        EOP4A0CM4w8AMY4/AMQ4/gAQ4/gDQIzjDwAxjj8AxDj+ABDj+ANAjOMPADGOPwDE1I7/od+2fpGU7/D/
        QVLx+EvS6PctyHH8JdUzAMhx/CXJACDG8ZekDxkAZDj+kvQxA4AEx1+SPs0AYHmOvyT9PwOApTn+kvTl
        DACW5fhL0ssZACzJ8Zekr2cAsBzHX5JezwBgKY6/JB2XAcAyHH9JOj4DgCU4/pJ0WgYA03P8Jen0DACm
        5vhL0nkZAEzL8Zek8zMAmJLjL0mXZQAwHcdfki7PAGAqjr8kXScDgGk4/pJ0vQwApmEASNL1MgCYihEg
        SdfJAGA6RoAkXZ4BwJSMAEm6LAOAaRkBknR+BgBTMwIk6bwMAKZnBEjS6RkALMEIkKTTMgBYhhEgScdn
        ALAUI0CSjssAYDlGgCS9ngHAkowASfp6BgDLMgIk6eUMAJZmBEjSlzMAWJ4RIEn/zwAgwQiQpE8zAMgw
        AiTpYwYAKUaAJH3IACDHCJAkA4AoI0BSPQOALCNAUjkDgLTiCPh162dJ+d5uQVptBPyz9dMWAOQZAQAQ
        ZQQAQJQRAABRRgAARBkBABBlBABAlBEAAFFGAABEGQEAEGUEAECUEQAAUUYAAEQZAQAQZQQAQJQRAABR
        RgAARBkBABBlBABAlBEAAFGHEfB+60sHc8WMAAB4ZgQAQJQRAABRRgAARBkBABBlBABAlBEAAFFGAABE
        GQEAEGUEAECUEQAAUUYAAEQZAQAQZQQAQJQRAABRRgAARBkBABBlBABAlBEAAFFGAABEGQEAEGUEAECU
        EQAAUUYAAEQZAQAQZQQAQJQRAABRRgAARBkBABBlBABAlBEAAFFGAABEGQEAEGUEAECUEQAAUUYAAEQZ
        AQAQZQQAQJQRAABRRgAARBkBABBlBABAlBEAAFHfbxkBABBkBABAlBEAAFFGAABEGQEAEGUEAECUEQAA
        UUYAAEQZAQAQZQQAQJQRAABRRgAARBkBABBlBABAlBEAAFFGAABEGQEAEGUEAECUEQAAUUYAAEQZAQAQ
        ZQQAQJQRAABRRgAARBkBABBlBABAlBEAAFFGAABEGQEAEGUEAECUEQAAUUYAAEQZAQAQZQQAQJQRAABR
        RgAARBkBABBlBABAlBEAAFFGAABEGQEAEGUEAECUEQAAUW+3jAAACDICACDKCACAKCMAAKKMAACIMgIA
        IMoIAIAoIwAAoowAAIgyAgAgyggAgCgjAACiaiPgj603WwCQVxkBf259swUAPFt9BDj+APCCVUeA4w8A
        r1htBDj+AHCkVUaA4w8AJ5p9BDj+AHCmWUeA4w8AF5ptBDj+AHAls4yAw/H/dgsAuJK9jwDHHwBuZK8j
        wPEHgBvb2whw/AHgTvYyAhx/ALizR48Axx8AHuRRI+DdluMPAA907xHg+APATtxrBDj+ALAztx4Bjj8A
        7NStRoDjDwA7d+0R4PgDwCSuNQIcfwCYzKUjwPEHgEmdOwIcfwCY3Kkj4HD8v9sCACZ37Ahw/AFgMa+N
        AMcfABb10ghw/AFgcZ+PAMcfACLGCHD8ASDmMAIcfwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAB4enp6+g/Kqv1cbg5kRwAAAABJRU5ErkJggg==
</value>
  </data>
</root>